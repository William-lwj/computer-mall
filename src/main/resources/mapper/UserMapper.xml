<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xx.mapper.UserMapper">

    <resultMap id="UserEntityMap" type="com.xx.pojo.User">
        <id column="uid" property="uid"/>
        <result column="is_delete" property="isDelete"/>
        <result column="created_user" property="createdUser"/>
        <result column="created_time" property="createdTime"/>
        <result column="modified_user" property="modifiedUser"/>
        <result column="modified_time" property="modifiedTime"/>
    </resultMap>

    <!--useGeneratedKeys="true"表示开启某个字段的值递增(大部分都是主键递增)
    keyProperty="uid"表示将表中哪个字段进行递增
    -->
    <insert id="insertUser" useGeneratedKeys="true" keyProperty="uid">
        INSERT INTO store.t_user(username, password, salt, phone, email, gender, avatar, is_delete,
                                 created_user, created_time, modified_user, modified_time)
        VALUES (#{username}, #{password}, #{salt}, #{phone}, #{email}, #{gender}, #{avatar}, #{isDelete},
                #{createdUser}, #{createdTime}, #{modifiedUser},#{modifiedTime})
    </insert>

    <!--select语句在执行的时候查询的结果无非两种:一个对象或多个对象
    resultType:表示查询的结果集类型,用来指定对应映射类的类型,且包含完整的包结构,但此处不能是resultType="com.cy.store.entity.User",因为这种写法要求表的字段的名字和类的属性名一模一样
    resultMap:表示当表的字段和类的对象属性名不一致时,来自定义查询结果集的映射规则-->
    <select id="findByUsername" resultMap="UserEntityMap">
        SELECT * FROM store.t_user WHERE username = #{username}
    </select>

    <update id="updatePasswordByUid">
        update store.t_user set password=#{password},
                                modified_user=#{modifiedUser},
                                modified_time=#{modifiedTime}
                                where uid=#{uid}
    </update>


    <select id="findByUid" resultMap="UserEntityMap">
        select * from store.t_user where uid=#{uid}
    </select>

    <update id="updateInfoByUid">
        update store.t_user
        set
        <if test="phone!=null">phone = #{phone},</if>
        <if test="email!=null">email = #{email},</if>
        <if test="gender!=null">gender = #{gender},</if>
        modified_user = #{modifiedUser},
        modified_time = #{modifiedTime}
        where uid=#{uid}
    </update>

    <update id="updateAvatarByUid">
        update store.t_user
        set
            avatar = #{avatar},
            modified_user = #{modifiedUser},
            modified_time = #{modifiedTime}
        where
            uid = #{uid}
    </update>
</mapper>